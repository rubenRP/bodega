SET statement_timeout = 0
SET lock_timeout = 0
SET idle_in_transaction_session_timeout = 0
SET client_encoding = 'UTF8'
SET standard_conforming_strings = on
SELECT pg_catalog.set_config('search_path', '', false)
SET check_function_bodies = false
SET xmloption = content
SET client_min_messages = warning
SET row_security = off
ALTER SCHEMA "public" OWNER TO "postgres"
CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions"
CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions"
CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions"
CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions"
SET default_tablespace = ''
SET default_table_access_method = "heap"
CREATE TABLE IF NOT EXISTS "public"."added_bottles" (
    "id" bigint NOT NULL,
    "bottle_id" bigint,
    "date_added" timestamp with time zone
)
ALTER TABLE "public"."added_bottles" OWNER TO "postgres"
ALTER TABLE "public"."added_bottles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."added_bottles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
)
CREATE TABLE IF NOT EXISTS "public"."bottles" (
    "id" bigint NOT NULL,
    "apellation" character varying,
    "cellar" character varying,
    "country" character varying,
    "name" character varying,
    "qty" integer DEFAULT 0,
    "region" character varying,
    "type" character varying,
    "vintage" integer,
    "last_added" timestamp without time zone DEFAULT "now"() NOT NULL,
    "mycellar" boolean DEFAULT false,
    "reviewed" boolean DEFAULT false,
    "date_scrapped" "date",
    "alcohol_content" character varying,
    "climate_soil" character varying,
    "aging" character varying,
    "consumption" character varying,
    "stay_barrel" character varying,
    "grapes" character varying[],
    "description" "text",
    "image" character varying,
    "location" "text" DEFAULT 'home'::"text",
    "drink_window" "text"
)
ALTER TABLE "public"."bottles" OWNER TO "postgres"
CREATE TABLE IF NOT EXISTS "public"."cellars" (
    "id" bigint NOT NULL,
    "created" "date" DEFAULT "now"()
)
ALTER TABLE "public"."cellars" OWNER TO "postgres"
ALTER TABLE "public"."cellars" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."cellars_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
)
ALTER TABLE "public"."bottles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."mycellar_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
)
CREATE TABLE IF NOT EXISTS "public"."opened_bottles" (
    "id" bigint NOT NULL,
    "bottle_id" bigint,
    "date_opened" timestamp with time zone
)
ALTER TABLE "public"."opened_bottles" OWNER TO "postgres"
ALTER TABLE "public"."opened_bottles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."opened_bottles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
)
CREATE TABLE IF NOT EXISTS "public"."profiles" (
    "id" "uuid" NOT NULL,
    "updated_at" timestamp with time zone,
    "username" "text",
    "avatar_url" "text",
    "role" integer,
    "initials" character varying,
    "cellar_id" bigint,
    CONSTRAINT "username_length" CHECK (("char_length"("username") >= 3))
)
ALTER TABLE "public"."profiles" OWNER TO "postgres"
CREATE TABLE IF NOT EXISTS "public"."reviews" (
    "id" bigint NOT NULL,
    "bottle_id" bigint NOT NULL,
    "rating" smallint,
    "comment" character varying,
    "date_added" timestamp without time zone DEFAULT "now"(),
    "profile_id" "uuid"
)
ALTER TABLE "public"."reviews" OWNER TO "postgres"
ALTER TABLE "public"."reviews" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."reviews_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
)
ALTER TABLE ONLY "public"."added_bottles"
    ADD CONSTRAINT "added_bottles_pkey" PRIMARY KEY ("id")
ALTER TABLE ONLY "public"."cellars"
    ADD CONSTRAINT "cellars_pkey" PRIMARY KEY ("id")
ALTER TABLE ONLY "public"."bottles"
    ADD CONSTRAINT "mycellar_pkey" PRIMARY KEY ("id")
ALTER TABLE ONLY "public"."opened_bottles"
    ADD CONSTRAINT "opened_bottles_pkey" PRIMARY KEY ("id")
ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_pkey" PRIMARY KEY ("id")
ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_username_key" UNIQUE ("username")
ALTER TABLE ONLY "public"."reviews"
    ADD CONSTRAINT "reviews_pkey" PRIMARY KEY ("id")
ALTER TABLE ONLY "public"."added_bottles"
    ADD CONSTRAINT "added_bottles_bottle_id_fkey" FOREIGN KEY ("bottle_id") REFERENCES "public"."bottles"("id")
ALTER TABLE ONLY "public"."opened_bottles"
    ADD CONSTRAINT "opened_bottles_bottle_id_fkey" FOREIGN KEY ("bottle_id") REFERENCES "public"."bottles"("id")
ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_cellar_id_fkey" FOREIGN KEY ("cellar_id") REFERENCES "public"."cellars"("id")
ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_id_fkey" FOREIGN KEY ("id") REFERENCES "auth"."users"("id")
ALTER TABLE ONLY "public"."reviews"
    ADD CONSTRAINT "reviews_bottle_id_fkey" FOREIGN KEY ("bottle_id") REFERENCES "public"."bottles"("id")
ALTER TABLE ONLY "public"."reviews"
    ADD CONSTRAINT "reviews_profile_id_fkey" FOREIGN KEY ("profile_id") REFERENCES "public"."profiles"("id")
CREATE POLICY "Enable access to all users" ON "public"."bottles" FOR SELECT USING (true)
CREATE POLICY "Public profiles are viewable by everyone." ON "public"."profiles" FOR SELECT USING (true)
CREATE POLICY "Users can insert their own profile." ON "public"."profiles" FOR INSERT WITH CHECK (("auth"."uid"() = "id"))
CREATE POLICY "Users can update own profile." ON "public"."profiles" FOR UPDATE USING (("auth"."uid"() = "id"))
ALTER TABLE "public"."profiles" ENABLE ROW LEVEL SECURITY
REVOKE USAGE ON SCHEMA "public" FROM PUBLIC
GRANT ALL ON SCHEMA "public" TO PUBLIC
GRANT USAGE ON SCHEMA "public" TO "anon"
GRANT USAGE ON SCHEMA "public" TO "authenticated"
GRANT USAGE ON SCHEMA "public" TO "service_role"
GRANT ALL ON TABLE "public"."added_bottles" TO "anon"
GRANT ALL ON TABLE "public"."added_bottles" TO "authenticated"
GRANT ALL ON TABLE "public"."added_bottles" TO "service_role"
GRANT ALL ON SEQUENCE "public"."added_bottles_id_seq" TO "anon"
GRANT ALL ON SEQUENCE "public"."added_bottles_id_seq" TO "authenticated"
GRANT ALL ON SEQUENCE "public"."added_bottles_id_seq" TO "service_role"
GRANT ALL ON TABLE "public"."bottles" TO "anon"
GRANT ALL ON TABLE "public"."bottles" TO "authenticated"
GRANT ALL ON TABLE "public"."bottles" TO "service_role"
GRANT ALL ON TABLE "public"."cellars" TO "anon"
GRANT ALL ON TABLE "public"."cellars" TO "authenticated"
GRANT ALL ON TABLE "public"."cellars" TO "service_role"
GRANT ALL ON SEQUENCE "public"."cellars_id_seq" TO "anon"
GRANT ALL ON SEQUENCE "public"."cellars_id_seq" TO "authenticated"
GRANT ALL ON SEQUENCE "public"."cellars_id_seq" TO "service_role"
GRANT ALL ON SEQUENCE "public"."mycellar_id_seq" TO "anon"
GRANT ALL ON SEQUENCE "public"."mycellar_id_seq" TO "authenticated"
GRANT ALL ON SEQUENCE "public"."mycellar_id_seq" TO "service_role"
GRANT ALL ON TABLE "public"."opened_bottles" TO "anon"
GRANT ALL ON TABLE "public"."opened_bottles" TO "authenticated"
GRANT ALL ON TABLE "public"."opened_bottles" TO "service_role"
GRANT ALL ON SEQUENCE "public"."opened_bottles_id_seq" TO "anon"
GRANT ALL ON SEQUENCE "public"."opened_bottles_id_seq" TO "authenticated"
GRANT ALL ON SEQUENCE "public"."opened_bottles_id_seq" TO "service_role"
GRANT ALL ON TABLE "public"."profiles" TO "anon"
GRANT ALL ON TABLE "public"."profiles" TO "authenticated"
GRANT ALL ON TABLE "public"."profiles" TO "service_role"
GRANT ALL ON TABLE "public"."reviews" TO "anon"
GRANT ALL ON TABLE "public"."reviews" TO "authenticated"
GRANT ALL ON TABLE "public"."reviews" TO "service_role"
GRANT ALL ON SEQUENCE "public"."reviews_id_seq" TO "anon"
GRANT ALL ON SEQUENCE "public"."reviews_id_seq" TO "authenticated"
GRANT ALL ON SEQUENCE "public"."reviews_id_seq" TO "service_role"
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres"
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon"
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated"
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role"
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres"
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon"
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated"
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role"
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres"
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon"
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated"
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role"
RESET ALL